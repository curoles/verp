// Rising edge triggered D Flip Flop
//
module Dff (q, d, clk);
   
  parameter WIDTH = 1;

  input  [WIDTH-1:0] d;
  input              clk;
  output [WIDTH-1:0] q;

  reg  [WIDTH-1:0] q;
  
  always @(posedge clk)
      q[WIDTH-1:0] <= d[WIDTH-1:0];

endmodule

module Dve();

    localparam WIDTH = 8;

    wire clk;

    wire [WIDTH-1:0] connector;

<%# Instantiate DFF 3 times -%>
<% 3.times do |i| -%>
    Dff #(.WIDTH()) ff(.d(connector<%= i %>), .q(connector<%= i+1 %>), .clk(clk));
<% end -%>

%   # Instantiate DFF 3 times
%   3.times do |i|
    Dff #(.WIDTH()) ff(.d(connector<%= i %>), .q(connector<%= i+1 %>), .clk(clk));
%   end


    initial
    begin
        $display("Test");
    end

endmodule: Dve

